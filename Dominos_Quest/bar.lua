local ObjectiveTrackerFrame = _G.ObjectiveTrackerFrameif not ObjectiveTrackerFrame then    returnendlocal Addon = _G["Dominos"]local ObjectiveTrackerBar = Addon:CreateClass('Frame', Addon.Frame)function ObjectiveTrackerBar:New()    local bar = ObjectiveTrackerBar.proto.New(self, 'quests')    return barendObjectiveTrackerBar:Extend(    'OnAcquire',    function(self)        self:Layout()    end)function ObjectiveTrackerBar:GetDefaults()    return {        point = 'CENTER',        x = 0,        y = 0,        showInPetBattleUI = true,        showInOverrideUI = true    }endfunction ObjectiveTrackerBar:Layout()    ObjectiveTrackerBlocksFrame:ClearAllPoints()    ObjectiveTrackerBlocksFrame:SetPoint('TopLeft', self, 35, 0)    ObjectiveTrackerBlocksFrame:SetPoint('BottomRight', self, 35, 0)    ObjectiveTrackerFrame:SetParent(self)    local pW, pH = self:GetPadding()		local h= self.sets.height or 500	    self:SetSize(275+pW, h+pH )endfunction ObjectiveTrackerBar:OnCreateMenu(menu)    self:AddLayoutPanel(menu)    menu:AddFadingPanel()endfunction ObjectiveTrackerBar:AddLayoutPanel(menu)    local l = LibStub('AceLocale-3.0'):GetLocale('Dominos-Config')    local panel = menu:NewPanel(l.Layout)      panel.scaleSlider = panel:NewScaleSlider()	 panel.sizeSlizer =            panel:NewSlider {            name = "Height",            min = 250,            max = function()                return 2000            end,            get = function()                return self.sets.height or 500            end,            set = function(_, value)                self.sets.height = value                panel.owner:Layout()            end        }    panel.paddingSlider = panel:NewPaddingSlider()endlocal ObjectiveTrackerModule = Addon:NewModule('ObjectiveTrackerBar', 'AceEvent-3.0')function ObjectiveTrackerModule:Load()    if not self.initialized then        self.initialized = true        -- setup the container watcher        ObjectiveTrackerFrame.ignoreFramePositionManager = true    end    self.frame = ObjectiveTrackerBar:New()    self:RegisterEvent('PLAYER_REGEN_ENABLED')endfunction ObjectiveTrackerModule:Unload()    self.frame:Free()    self:UnregisterEvent('PLAYER_REGEN_ENABLED')endfunction ObjectiveTrackerModule:PLAYER_REGEN_ENABLED()    if self.dirty then        self.dirty = nil        if self.frame then            self.frame:Layout()        end    endend